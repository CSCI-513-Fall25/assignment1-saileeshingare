For this project, I used the Strategy Design Pattern because it lets me keep the main game logic simple while still supporting multiple ways of searching for the battleships. The BattleshipSearch class just knows that it has a search strategy, but it doesnâ€™t care which one. It could be sweeping line by line, picking random cells, or using a more efficient method. This makes the program flexible, because I can easily add or change strategies without rewriting the core code. It also keeps the code cleaner and easier to understand since each search method is in its own class. The main benefit is that the design is organized, easy to extend, and avoids mixing all the logic in one big class.
